name: Release

on:
  push:
    tags: [ "v*" ]

jobs:
  build:

    runs-on: ubuntu-latest

    container: quay.io/pypa/manylinux1_x86_64

    env:
      PATH: /opt/python/cp38-cp38/bin:/opt/python/cp37-cp37m/bin:/opt/rh/devtoolset-8/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    steps:
      - uses: actions/checkout@v1
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry export --dev --format requirements.txt > dev-requirements.txt
          pip install --requirement dev-requirements.txt
      - name: Install UPX
        run: sudo apt-get install upx
      - name: Build distributions
        run: |
          ./scripts/build.sh
          pyinstaller --noconfirm --distpath bin dobby.spec
      - uses: actions/upload-artifact@v1
        with:
          name: python-packages
          path: dist
      - uses: actions/upload-artifact@v1
        with:
          name: binaries
          path: bin


  release:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v1
        with:
          name: binaries
          path: bin
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset (pex)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/dobby
          asset_name: dobby-generic
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (pyinstaller)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/dobby-linux
          asset_name: dobby-linux
          asset_content_type: application/octet-stream

  docker:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: python-packages
          path: dist
      - name: Get release tags
        run: echo ::set-env name=RELEASE_TAGS::$(echo ${GITHUB_REF} | sed -e "s/refs\/tags\///g" | sed -E "s/v?([0-9]+)\.([0-9+])\.([0-9]+)/\1.\2.\3,\1.\2,\1/g")
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@2da252bbb10a6ef49ade47c5c89ac65d46b9abdf
        with:
          name: rocketduck/dobby
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,${{ env.RELEASE_TAGS }}"
